{"version":3,"sources":["components/layout/Header.js","api/axios-posts.js","components/posts/postsList/PostsList.js","components/pages/Posts.js","store/actions/posts.js","store/actions/actionTypes.js","components/posts/comments/form/CommentsForm.js","components/posts/comments/commentsList/commentsList.js","components/pages/Post.js","components/posts/postForm/PostForm.js","components/pages/EditPost.js","components/pages/NewPost.js","components/pages/DeletePost.js","components/pages/NotFound.js","App.js","store/reducers/posts.js","index.js"],"names":["Header","href","className","instance","axios","create","baseURL","PostsList","posts","map","item","key","id","title","body","to","Posts","onFetchPosts","this","props","loading","Component","connect","state","dispatch","type","get","then","res","data","catch","error","CommentsForm","comment","onChange","e","setState","target","name","value","onPublish","preventDefault","onSubmit","text","placeholder","onClick","CommentsList","comments","Post","comment_body","fetch","a","publishComment","match","params","post","postId","onCommentSubmit","PostForm","htmlFor","defaultProps","EditPost","publish","put","history","push","find","NewPost","DeletePost","onDelete","deletePost","onCancel","delete","NotFound","App","exact","path","component","initialState","postsFetchStart","postsFetchSuccess","action","postsFetchFail","reducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","postsReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f7b0823.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <nav>\n      <a href=\"/\" className=\"nav-branding\">\n        Simple Blog\n      </a>\n    </nav>\n  );\n};\n\nexport default Header;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://simple-blog-api.crew.red'\n});\n\nexport default instance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './PostsList.css';\n\nconst PostsList = ({ posts }) => {\n  return (\n    <>\n      {posts.map(item => (\n        <div className=\"postlist-item\" key={item.id}>\n          <h4 className=\"postlist-item__title\">{item.title}</h4>\n          <p className=\"postlist-item__body\">{item.body}</p>\n          <div className=\"postlist-item__links\">\n            <div className=\"postlist-item__link-item\">\n              <div className=\"postlist-item__view-icon\" />\n              <Link to={`/posts/${item.id}`}>Read Post</Link>\n            </div>\n            <div className=\"postlist-item__link-item\">\n              <div className=\"postlist-item__edit-icon\" />\n              <Link to={`/posts/edit/${item.id}`}>Edit Post</Link>\n            </div>\n            <div className=\"postlist-item__link-item\">\n              <div className=\"postlist-item__delete-icon\" />\n              <Link to={`/posts/delete/${item.id}`}>Delete Post</Link>\n            </div>\n          </div>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default PostsList;\n\nPostsList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      body: PropTypes.string,\n      id: PropTypes.number\n    })\n  ).isRequired\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as actions from '../../store/actions';\nimport PostsList from '../posts/postsList/PostsList';\n\nclass Posts extends Component {\n  componentDidMount() {\n    const { onFetchPosts } = this.props;\n    onFetchPosts();\n  }\n\n  render() {\n    const { loading, posts } = this.props;\n    return (\n      <>\n        <h2> Latest Blog Posts</h2>\n        <Link to=\"/posts/new\" className=\"btn\">\n          Add New\n        </Link>\n        {loading ? <p>loading..</p> : <PostsList posts={posts} />}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts.posts,\n    loading: state.posts.loading\n  };\n};\n\nconst mapDispathToProps = dispatch => {\n  return {\n    onFetchPosts: () => dispatch(actions.postsFetch())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispathToProps\n)(Posts);\n\nPosts.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      body: PropTypes.string\n    })\n  ).isRequired,\n  onFetchPosts: PropTypes.func.isRequired\n};\n","import * as actionTypes from './actionTypes';\nimport axios from '../../api/axios-posts';\n\nexport const postsFetchStart = () => {\n  return {\n    type: actionTypes.POSTS_FETCH_START\n  };\n};\n\nexport const postsFetchSuccess = posts => {\n  return {\n    type: actionTypes.POSTS_FETCH_SUCCESS,\n    posts\n  };\n};\n\nexport const postsFetchFail = error => {\n  return {\n    type: actionTypes.POSTS_FETCH_FAIL,\n    error\n  };\n};\n\nexport const postsFetch = () => {\n  return dispatch => {\n    dispatch(postsFetchStart());\n\n    axios\n      .get('/posts')\n      .then(res => {\n        dispatch(postsFetchSuccess(res.data));\n      })\n      .catch(() => {\n        dispatch(postsFetchFail());\n      });\n  };\n};\n","export const POSTS_FETCH_START = 'POSTS_FETCH_START';\nexport const POSTS_FETCH_SUCCESS = 'POSTS_FETCH_SUCCESS';\nexport const POSTS_FETCH_FAIL = 'POSTS_FETCH_FAIL';\n","import React, { Component } from 'react';\nimport './CommentsForm.css';\nimport PropTypes from 'prop-types';\n\nclass CommentsForm extends Component {\n  state = {\n    comment: ''\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onPublish = e => {\n    e.preventDefault();\n    this.setState({ comment: '' });\n    this.props.onSubmit(this.state.comment);\n  };\n\n  render() {\n    const { text } = this.state;\n    return (\n      <form className=\"comment-form\">\n        <textarea\n          className=\"comment-form__textarea\"\n          name=\"comment\"\n          placeholder=\"Write Your Comment Here...\"\n          value={text}\n          onChange={this.onChange}\n        />\n        <button className=\"comment-form__submit\" onClick={this.onPublish}>\n          Publish Comment\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default CommentsForm;\n\nCommentsForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './commentsList.css';\n\nconst CommentsList = ({ comments }) => {\n  return (\n    <>\n      <ul className=\"comments-list\">\n        {comments.map(item => (\n          <li key={item.id} className=\"comments-list__item\">\n            {item.body}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default CommentsList;\n\nCommentsList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n","import React, { Component } from 'react';\nimport axios from '../../api/axios-posts';\nimport CommentsForm from '../posts/comments/form/CommentsForm';\nimport CommentsList from '../posts/comments/commentsList/commentsList';\n\nclass Post extends Component {\n  state = {\n    title: '',\n    body: '',\n    comments: [],\n    comment_body: ''\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    this.fetch(id);\n  }\n\n  fetch = async id => {\n    const res = await axios.get(`posts/${id}?_embed=comments`);\n    this.setState({\n      title: res.data.title,\n      body: res.data.body,\n      comments: res.data.comments\n    });\n  };\n\n  publishComment = async text => {\n    const { id } = this.props.match.params;\n    const res = await axios.post('/comments', {\n      postId: id,\n      body: text\n    });\n\n    this.setState({\n      comments: [\n        ...this.state.comments,\n        {\n          id: res.data.id,\n          postId: id,\n          body: text\n        }\n      ]\n    });\n  };\n\n  onCommentSubmit = text => {\n    this.publishComment(text);\n  };\n\n  render() {\n    const { title, body, comments } = this.state;\n\n    return (\n      <>\n        {title && (\n          <>\n            <h3>{title}</h3>\n            <p>{body}</p>\n          </>\n        )}\n        <hr />\n        <h3>Comments</h3>\n        {comments && <CommentsList comments={comments} />}\n        <h5>Leave Your Comment</h5>\n        <CommentsForm onSubmit={this.onCommentSubmit} />\n\n        <a href=\"/\">Back to Posts List</a>\n      </>\n    );\n  }\n}\n\nexport default Post;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './PostForm.css';\n\nclass PostForm extends Component {\n  state = {\n    title: '',\n    body: ''\n  };\n\n  componentDidMount() {\n    const { title, body } = this.props;\n    this.setState({ title, body });\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const { title, body } = this.state;\n    this.props.onSubmit({ title, body });\n  };\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <>\n        <div className=\"post-form\">\n          <div className=\"form-control\">\n            <label htmlFor=\"title\">Title</label>\n            <input\n              type=\"text\"\n              name=\"title\"\n              id=\"title\"\n              placeholder=\"Title\"\n              value={title}\n              onChange={this.onChange}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"body\">Body</label>\n            <textarea\n              type=\"text\"\n              name=\"body\"\n              id=\"body\"\n              placeholder=\"Body\"\n              value={body}\n              onChange={this.onChange}\n            />\n          </div>\n          <div className=\"form-control\">\n            <button className=\"post-form__submit\" onClick={this.onSubmit}>\n              Publish\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default PostForm;\n\nPostForm.defaultProps = {\n  title: '',\n  body: ''\n};\n\nPostForm.propTypes = {\n  title: PropTypes.string,\n  body: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport PostForm from '../posts/postForm/PostForm';\nimport axios from '../../api/axios-posts';\n\nclass EditPost extends Component {\n  onSubmit = ({ title, body }) => {\n    const { id } = this.props.match.params;\n    this.publish({ id, title, body });\n  };\n\n  publish = async ({ id, title, body }) => {\n    const res = await axios.put(`/posts/${id}`, { title, body });\n\n    this.props.history.push(`/`);\n  };\n\n  render() {\n    const { id } = this.props.match.params;\n    const { posts } = this.props;\n    const post = posts.find(item => item.id === +id);\n\n    return (\n      <>\n        <h3>Edit Post</h3>\n        <PostForm\n          title={post.title}\n          body={post.body}\n          onSubmit={this.onSubmit}\n        />\n\n        <a href=\"/\">Back to Posts List</a>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts.posts,\n    loading: state.posts.loading\n  };\n};\n\nexport default connect(mapStateToProps)(EditPost);\n","import React, { Component } from 'react';\nimport PostForm from '../posts/postForm/PostForm';\nimport axios from '../../api/axios-posts';\n\nclass NewPost extends Component {\n  onSubmit = ({ title, body }) => {\n    this.publish({ title, body });\n  };\n\n  publish = async ({ id, title, body }) => {\n    await axios.post(`/posts/`, { title, body });\n\n    this.props.history.push(`/`);\n  };\n\n  render() {\n    return (\n      <>\n        <h3>Compose New Post</h3>\n        <PostForm title=\"\" body=\"\" onSubmit={this.onSubmit} />\n\n        <a href=\"/\">Back to Posts List</a>\n      </>\n    );\n  }\n}\n\nexport default NewPost;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from '../../api/axios-posts';\n\nclass DeletePost extends Component {\n  onDelete = e => {\n    const { id } = this.props.match.params;\n    this.deletePost(id);\n  };\n\n  onCancel = e => {\n    this.props.history.push(`/`);\n  };\n\n  deletePost = async id => {\n    await axios.delete(`/posts/${id}`);\n    this.props.history.push(`/`);\n  };\n\n  render() {\n    const { id } = this.props.match.params;\n    const { posts } = this.props;\n    const post = posts.find(item => item.id === +id);\n    return (\n      <>\n        <h5>Are You Shure Want to Delete this Post?</h5>\n        <h3>{post.title}</h3>\n        <p>{post.body}</p>\n        <div className=\"delete-form-actions\">\n          <button className=\"btn\" onClick={this.onCancel}>\n            Cancel\n          </button>\n          <button className=\"btn btn--danger\" onClick={this.onDelete}>\n            Delete\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts.posts,\n    loading: state.posts.loading\n  };\n};\n\nexport default connect(mapStateToProps)(DeletePost);\n","import React from 'react';\n\nconst NotFound = () => <h1>404 Page Not Found</h1>;\n\nexport default NotFound;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Posts from './components/pages/Posts';\nimport Post from './components/pages/Post';\nimport EditPost from './components/pages/EditPost';\nimport NewPost from './components/pages/NewPost';\nimport DeletePost from './components/pages/DeletePost';\nimport NotFound from './components/pages/NotFound';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Posts} />\n          <Route exact path=\"/posts/new\" component={NewPost} />\n          <Route exact path=\"/posts/edit/:id\" component={EditPost} />\n          <Route exact path=\"/posts/delete/:id\" component={DeletePost} />\n          <Route exact path=\"/posts/:id\" component={Post} />\n          <Route component={NotFound} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  posts: [],\n  loading: false,\n  error: false\n};\n\nconst postsFetchStart = state => {\n  return {\n    ...state,\n    loading: true\n  };\n};\n\nconst postsFetchSuccess = (state, action) => {\n  return {\n    ...state,\n    posts: action.posts,\n    loading: false\n  };\n};\n\nconst postsFetchFail = (state, action) => {\n  return {\n    ...state,\n    loading: false,\n    error: action.error\n  };\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.POSTS_FETCH_START:\n      return postsFetchStart(state, action);\n    case actionTypes.POSTS_FETCH_SUCCESS:\n      return postsFetchSuccess(state, action);\n    case actionTypes.POSTS_FETCH_FAIL:\n      return postsFetchFail(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport postsReducer from './store/reducers/posts';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  posts: postsReducer\n});\n\nconst store = createStore(\n  rootReducer /* preloadedState, */,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}